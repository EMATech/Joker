language: cpp
os:
  - linux
#  - osx
env:
  global:
  - PATH=/usr/lib/x86_64-linux-gnu/qt5/bin:/usr/local/opt/qt5/bin:$PATH
  - JOKER_RELEASE_PATH=$HOME
  - TESTS_RELEASE_PATH=$HOME
  matrix:
#  - JOB=UNCRUSTIFY
#  - JOB=DOXYGEN
#  - JOB=BUILD_SPEC_BANDIT
#  - JOB=BUILD_RELEASE_JOKER
  - JOB=BUILD_RELEASE_POUET
#  - JOB=BUILD_RELEASE_LTCTOOL
#  - JOB=BUILD_RELEASE_MIDITOOL
#  - JOB=BUILD_RELEASE_ALL_TESTS
matrix:
  exclude:
    - os: linux
      env: JOB=UNCRUSTIFY
    - os: linux
      env: JOB=DOXYGEN
    - os: linux
      env: JOB=BUILD_RELEASE_LTCTOOL
    - os: linux
      env: JOB=BUILD_RELEASE_MIDITOOL
install:
- git submodule update --init --recursive
- if [[ "$JOB" == UNCRUSTIFY ]]; then brew install uncrustify; fi
- if [[ "$JOB" == DOXYGEN ]]; then brew install doxygen; fi
- if [[ "$JOB" == BUILD_* ]]; then scripts/install_qt5.sh; fi
#- if [[ "$JOB" == BUILD_* ]]; then scripts/install_sdl.sh; fi
#- if [[ "$JOB" == BUILD_* ]]; then scripts/install_ltc.sh; fi
#- if [[ "$JOB" == BUILD_* ]]; then scripts/install_ffmpeg.sh; fi
#- if [[ "$JOB" == BUILD_* ]]; then scripts/install_portaudio.sh; fi
- if [[ "$JOB" == BUILD_SPEC_* ]]; then sudo pip install cpp-coveralls; fi

script:
- if [[ "$JOB" == UNCRUSTIFY ]]; then ./scripts/uncrustify.sh; fi
- if [[ "$JOB" == DOXYGEN ]]; then ./scripts/doxygen.sh; fi
- if [[ "$JOB" == BUILD_SPEC_BANDIT ]]; then qmake specs/AllSpecs.pro; fi
- if [[ "$JOB" == BUILD_RELEASE_JOKER ]]; then qmake app/Joker/Joker.pro; fi
- if [[ "$JOB" == BUILD_RELEASE_POUET ]]; then qmake --version; fi
- if [[ "$JOB" == BUILD_RELEASE_POUET ]]; then qmake tests/FormTest/FormTest.pro; fi
- if [[ "$JOB" == BUILD_RELEASE_LTCTOOL ]]; then qmake app/LTCTool/LTCTool.pro; fi
- if [[ "$JOB" == BUILD_RELEASE_MIDITOOL ]]; then qmake app/MidiTool/MidiTool.pro; fi
- if [[ "$JOB" == BUILD_RELEASE_ALL_TESTS ]]; then qmake tests/tests.pro; fi
- if [[ "$JOB" == BUILD_* ]]; then make; fi
- if [[ "$JOB" == BUILD_SPEC_BANDIT ]]; then ./AllSpecs; fi
- export RELEASED_PACKAGE_FILENAME=$(ls -1 $JOKER_RELEASE_PATH/Joker_$TRAVIS_TAG.dmg)
- echo ${RELEASED_PACKAGE_FILENAME}

after_success:
- if [[ "$TRAVIS_OS_NAME" == osx ]] && [[ "$JOB" == BUILD_AUTOTEST ]]; then coveralls -E .+/moc_.+ -E .+/ui_.+ -E .+\.app -E .+/tests/.+ -E .+/app/.+ -E .+/specs/.+ --verbose; fi
after_failure:
- if [[ "$TRAVIS_OS_NAME" == osx ]] && [[ "$JOB" == BUILD_AUTOTEST ]]; then ./scripts/upload.sh *.result.bmp; fi
notifications:
  email: true
  irc:
    channels: "phonations.com#joker"
    on_success: always
  webhooks:
    urls: https://webhooks.gitter.im/e/9e468ed6125989020262
    on_success: always
deploy:
  provider: releases
  api_key:
    secure: DTPxxREDO8+Pi/cnqKr1nce9FxJ3AUY7h4S9gHt3S2vBkrlZM4vD4GLXCVjbZuSpnqkTTAiGhUiYEN8jiF3pjStKKlEl2w537cDpoSl1ZAB5G+G3PKTBxG5MhRMZkTEgYFvtx/VPpvleQ4C8cMosogQk7iBwwuk19FLbcL0/kL4=
  file: ${RELEASED_PACKAGE_FILENAME}
  on:
    tags: true
    all_branches: true
    repo: Phonations/Joker
    condition: $JOB = BUILD_RELEASE_JOKER
