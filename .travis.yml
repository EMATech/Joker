language: objective-c
install:
- brew update
- brew install ffmpeg
- brew install libav
- brew install portaudio
- brew install doxygen
- brew install uncrustify
- brew install node
- brew install npm
- mkdir tmp && cd tmp
- "../scripts/install_libltc.sh"
- ls -la
- "../scripts/install_sdl.sh"
- brew install qt5
- find /usr/local/Cellar/ -perm -ugo+r -iname "*dylib*" -exec chmod +w {} \;
- npm install -g appdmg
- export PATH=$PATH:/usr/local/opt/qt5/bin
- brew install pyenv
- eval "$(pyenv init -)"
- pyenv install 2.7.2
- pyenv global 2.7.2
- pyenv rehash
- pip install cpp-coveralls
- pyenv rehash
- export JOKER_RELEASE_PATH=$HOME
script:
- mkdir AutoTest && cd AutoTest
- qmake ../../tests/AutoTest/AutoTest.pro
- make
- "./AutoTest"
- cd ..
- mkdir Joker && cd Joker
- qmake ../../app/Joker/Joker.pro
- make
- cd ..
- cd ..
- "./scripts/doxygen.sh"
- "./scripts/uncrustify.sh"
after_success:
- coveralls --exclude /usr/local --exclude tmp/Joker --exclude tests --build-root
  tmp/AutoTest -E .+/moc_.+ -E .+/ui_.+
- ./scripts/update-gh-pages.sh
notifications:
  irc: phonations.com#joker
  email: false
env:
  global:
    secure: StCptdbX5mPsWDLvwtRS8R0IP2t0ZaPUpRHtnVQbooMyskwWHOiM809iGFoUNyvsZQiPl/0psWjlpXpWm+NBmChj/ADksx9PhFg8WKya3uTLQ2bJkGo9dtW7y1BQ38kDpqrKVjn1zTKF1lZvd3+09KzNmmjAAcoxlD6rqssP7Rw=
